namespace yaf_mojoportal
{
    using mojoPortal.Web;
    using System;
    using System.Data;
    using System.Web.UI;
    using System.Web.UI.WebControls;
    using yaf;

    public class MojoportalModuleEdit : PortalModuleBase
    {
        protected DropDownList BoardID;
        protected LinkButton cancel;
        protected DropDownList CategoryID;
        protected LinkButton create;
        protected LinkButton update;

        private void BindCategories()
        {
            using (DataTable table = DB.category_list(this.BoardID.SelectedValue, DBNull.Value))
            {
                DataRow row = table.NewRow();
                row["Name"] = "[All Categories]";
                row["CategoryID"] = DBNull.Value;
                table.Rows.InsertAt(row, 0);
                this.CategoryID.DataSource = table;
                this.CategoryID.DataTextField = "Name";
                this.CategoryID.DataValueField = "CategoryID";
                this.CategoryID.DataBind();
                if (base.get_Settings()["forumcategoryid"] != null)
                {
                    ListItem item = this.CategoryID.Items.FindByValue(base.get_Settings()["forumcategoryid"].ToString());
                    if (item != null)
                    {
                        item.Selected = true;
                    }
                }
            }
        }

        private void BoardID_SelectedIndexChanged(object sender, EventArgs e)
        {
            this.BindCategories();
        }

        private void cancel_Click(object sender, EventArgs e)
        {
            Forum.Redirect(0);
        }

        private void create_Click(object sender, EventArgs e)
        {
            Forum.Redirect(0x37);
        }

        private void DotNetNukeModuleEdit_Load(object sender, EventArgs e)
        {
            this.update.Text = "Update";
            this.cancel.Text = "Cancel";
            this.create.Text = "Create New Board";
            this.update.Visible = base.get_IsEditable();
            this.create.Visible = base.get_IsEditable();
            if (!base.IsPostBack)
            {
                using (DataTable table = DB.board_list(DBNull.Value))
                {
                    this.BoardID.DataSource = table;
                    this.BoardID.DataTextField = "Name";
                    this.BoardID.DataValueField = "BoardID";
                    this.BoardID.DataBind();
                    if (base.get_Settings()["forumboardid"] != null)
                    {
                        ListItem item = this.BoardID.Items.FindByValue(base.get_Settings()["forumboardid"].ToString());
                        if (item != null)
                        {
                            item.Selected = true;
                        }
                    }
                }
                this.BindCategories();
            }
        }

        protected override void OnInit(EventArgs e)
        {
            base.Load += new EventHandler(this.DotNetNukeModuleEdit_Load);
            this.update.Click += new EventHandler(this.update_Click);
            this.cancel.Click += new EventHandler(this.cancel_Click);
            this.create.Click += new EventHandler(this.create_Click);
            this.BoardID.SelectedIndexChanged += new EventHandler(this.BoardID_SelectedIndexChanged);
            base.OnInit(e);
        }

        protected override void Render(HtmlTextWriter writer)
        {
            writer.WriteLine("<link rel='stylesheet' type='text/css' href='{0}themes/standard/theme.css'/>", Config.get_Root());
            base.Render(writer);
        }

        private void update_Click(object sender, EventArgs e)
        {
            ModuleController controller = new ModuleController();
            controller.UpdateModuleSetting(base.get_ModuleId(), "forumboardid", this.BoardID.SelectedValue);
            controller.UpdateModuleSetting(base.get_ModuleId(), "forumcategoryid", this.CategoryID.SelectedValue);
            Forum.Redirect(0);
        }
    }
}

